// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace libh6n
{
    public unsafe partial class libh6n
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("H6Agent", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="H6N_createInterface")]
            internal static extern global::System.IntPtr H6N_createInterface([MarshalAs(UnmanagedType.LPStr)] string name, int version);
        }

        /// <summary>
/// <para>Retrieves a pointer to an interface by the specified name-version pair. The libh6n API tries to remain backwards-</para>
/// <para>and forwards-compatible, so interfaces are versioned. Libh6n should automatically use the latest version available</para>
/// <para>by using preprocessor definitions to define structures of a specific version. The correct interface name and version</para>
/// <para>number can be found in the particular interface's documentation or in the adjacent preprocessor definitions.</para>
/// </summary>
/// <param name="name">the interface name to acquire</param>
/// <param name="version">the version of the specified interface to acquire</param>
/// <returns>
/// <para>a pointer to the requested interface, or 0 (null pointer) if:</para>
/// <para>a) the specified interface-version pair does not exist or is unimplemented,</para>
/// <para>b) the H6N agent shared library is not loaded, or</para>
/// <para>c) if any other error occurs.</para>
/// </returns>
/// <remarks>
/// <para>Many interfaces require that you call a free or release function if you're done using it. Check the documentation</para>
/// <para>for the particular interface for more details.</para>
/// </remarks>
        public static global::System.IntPtr H6N_createInterface(string name, int version)
        {
            var __ret = __Internal.H6N_createInterface(name, version);
            return __ret;
        }
    }

    public unsafe partial struct H6N_Int128
    {
        [StructLayout(LayoutKind.Explicit, Size = 16)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal ulong lo;

            [FieldOffset(8)]
            internal ulong hi;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("H6Agent", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0_H6N_Int128@@QAE@ABU0@@Z")]
            internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
        }

        private H6N_Int128.__Internal __instance;
        internal H6N_Int128.__Internal __Instance { get { return __instance; } }

        internal static global::libh6n.H6N_Int128 __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new global::libh6n.H6N_Int128(native.ToPointer(), skipVTables);
        }

        internal static global::libh6n.H6N_Int128 __CreateInstance(global::libh6n.H6N_Int128.__Internal native, bool skipVTables = false)
        {
            return new global::libh6n.H6N_Int128(native, skipVTables);
        }

        private H6N_Int128(global::libh6n.H6N_Int128.__Internal native, bool skipVTables = false)
            : this()
        {
            __instance = native;
        }

        private H6N_Int128(void* native, bool skipVTables = false) : this()
        {
            __instance = *(global::libh6n.H6N_Int128.__Internal*) native;
        }

        public H6N_Int128(global::libh6n.H6N_Int128 _0)
            : this()
        {
            var ____arg0 = _0.__Instance;
            var __arg0 = new global::System.IntPtr(&____arg0);
            fixed (__Internal* __instancePtr = &__instance)
            {
                __Internal.cctor(new global::System.IntPtr(__instancePtr), __arg0);
            }
        }

        public ulong Lo
        {
            get
            {
                return __instance.lo;
            }

            set
            {
                __instance.lo = value;
            }
        }

        public ulong Hi
        {
            get
            {
                return __instance.hi;
            }

            set
            {
                __instance.hi = value;
            }
        }
    }

    public unsafe partial class H6N_H6ACClient1 : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 12)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal global::System.IntPtr release;

            [FieldOffset(4)]
            internal global::System.IntPtr setPlayerUniqueID;

            [FieldOffset(8)]
            internal global::System.IntPtr isPlayerIDAquired;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("H6Agent", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0__H6N__H6ACClient_1_@@QAE@ABU0@@Z")]
            internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
        }

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::libh6n.H6N_H6ACClient1> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::libh6n.H6N_H6ACClient1>();
        protected internal void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        internal static global::libh6n.H6N_H6ACClient1 __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new global::libh6n.H6N_H6ACClient1(native.ToPointer(), skipVTables);
        }

        internal static global::libh6n.H6N_H6ACClient1 __CreateInstance(global::libh6n.H6N_H6ACClient1.__Internal native, bool skipVTables = false)
        {
            return new global::libh6n.H6N_H6ACClient1(native, skipVTables);
        }

        private static void* __CopyValue(global::libh6n.H6N_H6ACClient1.__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(global::libh6n.H6N_H6ACClient1.__Internal));
            *(global::libh6n.H6N_H6ACClient1.__Internal*) ret = native;
            return ret.ToPointer();
        }

        private H6N_H6ACClient1(global::libh6n.H6N_H6ACClient1.__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected H6N_H6ACClient1(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public H6N_H6ACClient1()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::libh6n.H6N_H6ACClient1.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public H6N_H6ACClient1(global::libh6n.H6N_H6ACClient1 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::libh6n.H6N_H6ACClient1.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::libh6n.H6N_H6ACClient1.__Internal*) __Instance) = *((global::libh6n.H6N_H6ACClient1.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::libh6n.H6N_H6ACClient1 __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::libh6n.Delegates.Action_IntPtr Release
        {
            get
            {
                var __ptr0 = ((global::libh6n.H6N_H6ACClient1.__Internal*) __Instance)->release;
                return __ptr0 == IntPtr.Zero? null : (global::libh6n.Delegates.Action_IntPtr) Marshal.GetDelegateForFunctionPointer(__ptr0, typeof(global::libh6n.Delegates.Action_IntPtr));
            }

            set
            {
                ((global::libh6n.H6N_H6ACClient1.__Internal*)__Instance)->release = value == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(value);
            }
        }

        public global::libh6n.Delegates.Action_IntPtr_libh6n__H6N_Int128___Internal SetPlayerUniqueID
        {
            get
            {
                var __ptr0 = ((global::libh6n.H6N_H6ACClient1.__Internal*) __Instance)->setPlayerUniqueID;
                return __ptr0 == IntPtr.Zero? null : (global::libh6n.Delegates.Action_IntPtr_libh6n__H6N_Int128___Internal) Marshal.GetDelegateForFunctionPointer(__ptr0, typeof(global::libh6n.Delegates.Action_IntPtr_libh6n__H6N_Int128___Internal));
            }

            set
            {
                ((global::libh6n.H6N_H6ACClient1.__Internal*)__Instance)->setPlayerUniqueID = value == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(value);
            }
        }

        public global::libh6n.Delegates.Func_int_IntPtr IsPlayerIDAquired
        {
            get
            {
                var __ptr0 = ((global::libh6n.H6N_H6ACClient1.__Internal*) __Instance)->isPlayerIDAquired;
                return __ptr0 == IntPtr.Zero? null : (global::libh6n.Delegates.Func_int_IntPtr) Marshal.GetDelegateForFunctionPointer(__ptr0, typeof(global::libh6n.Delegates.Func_int_IntPtr));
            }

            set
            {
                ((global::libh6n.H6N_H6ACClient1.__Internal*)__Instance)->isPlayerIDAquired = value == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(value);
            }
        }
    }

    public unsafe partial class H6N_H6ACServer1 : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 4)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal global::System.IntPtr release;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("H6Agent", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.ThisCall,
                EntryPoint="??0__H6N__H6ACServer_1_@@QAE@ABU0@@Z")]
            internal static extern global::System.IntPtr cctor(global::System.IntPtr __instance, global::System.IntPtr _0);
        }

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::libh6n.H6N_H6ACServer1> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::libh6n.H6N_H6ACServer1>();
        protected internal void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        internal static global::libh6n.H6N_H6ACServer1 __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new global::libh6n.H6N_H6ACServer1(native.ToPointer(), skipVTables);
        }

        internal static global::libh6n.H6N_H6ACServer1 __CreateInstance(global::libh6n.H6N_H6ACServer1.__Internal native, bool skipVTables = false)
        {
            return new global::libh6n.H6N_H6ACServer1(native, skipVTables);
        }

        private static void* __CopyValue(global::libh6n.H6N_H6ACServer1.__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(global::libh6n.H6N_H6ACServer1.__Internal));
            *(global::libh6n.H6N_H6ACServer1.__Internal*) ret = native;
            return ret.ToPointer();
        }

        private H6N_H6ACServer1(global::libh6n.H6N_H6ACServer1.__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected H6N_H6ACServer1(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public H6N_H6ACServer1()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::libh6n.H6N_H6ACServer1.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public H6N_H6ACServer1(global::libh6n.H6N_H6ACServer1 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::libh6n.H6N_H6ACServer1.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::libh6n.H6N_H6ACServer1.__Internal*) __Instance) = *((global::libh6n.H6N_H6ACServer1.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        public virtual void Dispose(bool disposing)
        {
            if (__Instance == IntPtr.Zero)
                return;
            global::libh6n.H6N_H6ACServer1 __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::libh6n.Delegates.Action_IntPtr Release
        {
            get
            {
                var __ptr0 = ((global::libh6n.H6N_H6ACServer1.__Internal*) __Instance)->release;
                return __ptr0 == IntPtr.Zero? null : (global::libh6n.Delegates.Action_IntPtr) Marshal.GetDelegateForFunctionPointer(__ptr0, typeof(global::libh6n.Delegates.Action_IntPtr));
            }

            set
            {
                ((global::libh6n.H6N_H6ACServer1.__Internal*)__Instance)->release = value == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(value);
            }
        }
    }

    namespace Delegates
    {
        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate void Action_IntPtr(global::System.IntPtr _0);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate void Action_IntPtr_libh6n__H6N_Int128___Internal(global::System.IntPtr _0, global::libh6n.H6N_Int128.__Internal _1);

        [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
        public unsafe delegate int Func_int_IntPtr(global::System.IntPtr _0);
    }
}
